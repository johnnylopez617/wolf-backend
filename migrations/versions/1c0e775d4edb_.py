"""empty message

Revision ID: 1c0e775d4edb
Revises: 
Create Date: 2025-09-01 14:44:57.258751

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1c0e775d4edb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('games',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('game_name', sa.String(length=255), nullable=False),
    sa.Column('hole', sa.Integer(), nullable=False),
    sa.Column('last_saved', sa.DateTime(), nullable=False),
    sa.Column('dollars', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_dollars', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('is_continuing_game', sa.Boolean(), nullable=False),
    sa.Column('pressed_button', sa.Integer(), nullable=False),
    sa.Column('wolf', sa.Integer(), nullable=False),
    sa.Column('wolf_birdie_points', sa.Integer(), nullable=False),
    sa.Column('wolf_eagle_points', sa.Integer(), nullable=False),
    sa.Column('wolf_non_eagle_points', sa.Integer(), nullable=False),
    sa.Column('non_wolf_birdie_points', sa.Integer(), nullable=False),
    sa.Column('prox', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('current_login_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_ip', sa.String(length=100), nullable=True),
    sa.Column('current_login_ip', sa.String(length=100), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('fs_uniquifier', sa.String(length=255), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('fs_uniquifier'),
    sa.UniqueConstraint('username')
    )
    op.create_table('game_hole_data',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.Column('hole_number', sa.Integer(), nullable=False),
    sa.Column('hole_dollars', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('activated_dollars', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('pressed_count', sa.Boolean(), nullable=False),
    sa.Column('pressed_pushed_toggle', sa.Boolean(), nullable=False),
    sa.Column('alone_pushed', sa.Boolean(), nullable=False),
    sa.Column('roll_pushed', sa.Boolean(), nullable=False),
    sa.Column('re_roll_pushed', sa.Boolean(), nullable=False),
    sa.Column('wolf_hole', sa.Integer(), nullable=False),
    sa.Column('hole_handicap', sa.Integer(), nullable=False),
    sa.Column('hole_par', sa.Integer(), nullable=False),
    sa.Column('prox_array', sa.Boolean(), nullable=False),
    sa.CheckConstraint('hole_number >= 1 AND hole_number <= 18'),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('game_id', 'hole_number')
    )
    op.create_table('game_players',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.Column('player_number', sa.Integer(), nullable=False),
    sa.Column('player_name', sa.String(length=255), nullable=False),
    sa.Column('is_activated', sa.Boolean(), nullable=False),
    sa.Column('handicap', sa.Integer(), nullable=False),
    sa.Column('wolf_birdie_points', sa.Integer(), nullable=False),
    sa.Column('wolf_eagle_points', sa.Integer(), nullable=False),
    sa.Column('wolf_non_eagle_points', sa.Integer(), nullable=False),
    sa.Column('non_wolf_birdie_points', sa.Integer(), nullable=False),
    sa.CheckConstraint('player_number >= 1 AND player_number <= 9'),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('game_id', 'player_number')
    )
    op.create_table('player_hole_scores',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('game_id', sa.UUID(), nullable=False),
    sa.Column('player_number', sa.Integer(), nullable=False),
    sa.Column('hole_number', sa.Integer(), nullable=False),
    sa.Column('player_score', sa.Integer(), nullable=False),
    sa.Column('net_score', sa.Integer(), nullable=False),
    sa.Column('gross_score', sa.Integer(), nullable=False),
    sa.Column('player_money', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('wolf_score', sa.Integer(), nullable=False),
    sa.Column('prox_score', sa.Integer(), nullable=False),
    sa.CheckConstraint('hole_number >= 1 AND hole_number <= 18'),
    sa.CheckConstraint('player_number >= 1 AND player_number <= 9'),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('game_id', 'player_number', 'hole_number')
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('saved_game_meta',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('saved_at', sa.DateTime(), nullable=False),
    sa.Column('hole', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['games.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('saved_game_meta')
    op.drop_table('roles_users')
    op.drop_table('player_hole_scores')
    op.drop_table('game_players')
    op.drop_table('game_hole_data')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('games')
    # ### end Alembic commands ###
